// Generated by CoffeeScript 1.6.1
var BasicController, STATIC_URL, developer_agreement, discover_url, github_auth_url, hb, how_to_url, logout_url, merchant_agreement, modules_url, profile_url, signin_url, update_credit_card, _, _ref,
  _this = this;

_ = require('underscore');

hb = require('handlebars');

_ref = require('../conf'), STATIC_URL = _ref.STATIC_URL, logout_url = _ref.logout_url, update_credit_card = _ref.update_credit_card, signin_url = _ref.signin_url, profile_url = _ref.profile_url, github_auth_url = _ref.github_auth_url, discover_url = _ref.discover_url, how_to_url = _ref.how_to_url, modules_url = _ref.modules_url, merchant_agreement = _ref.merchant_agreement, developer_agreement = _ref.developer_agreement;

BasicController = (function() {

  function BasicController(req, res) {
    var context, offset, path, segments,
      _this = this;
    this.req = req;
    this.res = res;
    this._view = function(name, context) {
      return BasicController.prototype._view.apply(_this, arguments);
    };
    path = this.req.path;
    segments = _.without(path.split("/"), "");
    offset = this.offset || 0;
    this.funcName = (segments[1 - offset] != null) && !/^_/.test(segments[1 - offset]) ? segments[1 - offset] : 'index';
    if (segments.length > (2 - offset)) {
      this.get = segments.slice(2 - offset);
    }
    if (typeof this[this.funcName] === 'function') {
      this.app = this.req.app;
      context = {
        title: "Home Page",
        STATIC_URL: STATIC_URL,
        in_stealth_mode: false,
        user: this.req.user,
        logout_url: logout_url,
        signin_url: signin_url,
        profile_url: profile_url,
        github_auth_url: github_auth_url,
        discover_url: discover_url,
        how_to_url: how_to_url,
        modules_url: modules_url,
        merchant_agreement: merchant_agreement,
        developer_agreement: developer_agreement,
        update_credit_card: update_credit_card
      };
      if (this.context) {
        _.extend(this.context, context);
      } else {
        this.context = context;
      }
      this[this.funcName]();
    } else {
      this.res.send("Error 404", 404);
    }
  }

  BasicController.prototype._view = function(name, context) {
    return hb.compile(this.app.Views[name])(context);
  };

  return BasicController;

})();

module.exports = BasicController;
