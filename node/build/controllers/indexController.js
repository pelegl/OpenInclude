// Generated by CoffeeScript 1.6.1
var IndexController, esClient,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

esClient = require('../conf').esClient;

IndexController = (function(_super) {

  __extends(IndexController, _super);

  function IndexController(req, res) {
    this.req = req;
    this.res = res;
    this.offset = 1;
    IndexController.__super__.constructor.apply(this, arguments);
  }

  IndexController.prototype.index = function() {
    this.context.body = this._view('index', this.context);
    return this.res.render('base', this.context);
  };

  IndexController.prototype.login = function() {
    this.context.title = "Login";
    this.context.body = this._view('registration/login', this.context);
    return this.res.render('base', this.context);
  };

  IndexController.prototype['how-to'] = function() {
    this.context.title = "How to";
    this.context.body = this._view('how-to', this.context);
    return this.res.render('base', this.context);
  };

  return IndexController;

})(require('./basicController'));

module.exports = function(req, res) {
  return new IndexController(req, res);
};
