// Generated by CoffeeScript 1.6.1
/*
  Config
*/

var Module, ObjectId, async, definition, get_models, git, index, statics, _, _ref;

ObjectId = require('mongoose').Schema.Types.ObjectId;

_ref = require('../conf'), get_models = _ref.get_models, git = _ref.git;

async = require('async');

_ = require('underscore');

Module = get_models(["Module"])[0];

/*
  Definition
*/


definition = {
  module_id: {
    type: ObjectId,
    ref: 'Module'
  },
  login: String,
  snapshot_date: Date,
  id: String,
  type: String
};

statics = {
  create: function(module_id, snapshot_date, payload, callback) {
    var data, stargazer,
      _this = this;
    data = _.extend({}, payload);
    data.module_id = module_id;
    data.snapshot_date = snapshot_date;
    stargazer = new this(data);
    return stargazer.save(function(err) {
      if (err != null) {
        console.error(err);
      }
      return callback(null);
    });
  }
};

index = [
  [
    {
      snapshot_date: 1,
      login: 1
    }, {
      unique: true
    }
  ]
];

exports.statics = statics;

exports.index = index;

exports.definition = definition;
